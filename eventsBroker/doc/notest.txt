- every request is an event
- every response is an event or a callback
- http requests are events, websocket class is the listener (event in event ?)
- broadcast events (multiple listeners)
- every connection is a listener to a new event with the connection id (event in event ?)
- thin layer observers so big classes are not loaded all at once (lazy init, load on demand)
- class instantiation is an event to (observable)
- events can have a listener criteria (only observers that match a certain criteria will answer)
- events can require a minimum number of listeners (ex: at least one listener must process the event otherwise an error callback will be invoked)
- events can have maximum number of listeners (ex: only one listener will process an event, in case there is no need to be processed by all the listeners)


- some classes listen for new connections from a web-socket driver
    - on new connection a new event is created with the connection id
        - a class fires an event for some connections (ex: all connections from a user)

or

- new connection
    - new event from client: register this connection for all the following events d

- remote request is an event with a target criteria (address)


- 2 types of subscribers
    - static ones (models, components)
    - dynamic ones (connections)